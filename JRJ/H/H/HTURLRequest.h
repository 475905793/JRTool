//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ASIHTTPRequestDelegate-Protocol.h"

@class ASIHTTPRequest, NSData, NSDictionary, NSError, NSMutableData, NSMutableDictionary, NSString, NSURL, NSURLSessionTask;

@interface HTURLRequest : NSObject <ASIHTTPRequestDelegate>
{
    NSURL *_url;
    NSMutableData *_requestData;
    NSData *_responseData;
    NSString *_responseString;
    id _responseObject;
    double _contentLeng;
    long long _accessTokenFaileCount;
    ASIHTTPRequest *_request;
    NSMutableDictionary *_params;
    NSURLSessionTask *_sessionTask;
    _Bool _validateSecureCertificate;
    _Bool _shouldCompressRequestBody;
    _Bool _logEnabled;
    int _contentType;
    long long _retCode;
    NSString *_retMsg;
    id _rawResponseObject;
    CDUnknownBlockType _beforeSendBlock;
    CDUnknownBlockType _finishBlock;
    CDUnknownBlockType _faileBlock;
    CDUnknownBlockType _multiBlock;
    id _userInfo;
    NSString *_downloadDestinationPath;
    NSDictionary *_parameters;
    NSError *_error;
    NSString *_requestMethod;
    HTURLRequest *_keepSelf;
    ASIHTTPRequest *_lastRequest;
    HTURLRequest *_lastHTRequest;
}

+ (id)requestWithURL:(id)arg1;
+ (id)bindUserPhontNumber:(id)arg1 password:(id)arg2 verifyCode:(id)arg3;
+ (id)userLoginOut;
+ (id)userRegit:(id)arg1 userPass:(id)arg2;
+ (id)userLoginGet:(id)arg1 userPass:(id)arg2;
+ (id)perfect:(id)arg1;
+ (id)setPassWord:(id)arg1 AndPassportId:(id)arg2 AndIphone:(id)arg3 AndbizSource:(id)arg4 andSpToken:(id)arg5;
+ (id)isIphoneExit:(id)arg1;
+ (id)userIdentiferInfo:(id)arg1;
+ (void)updateAccessTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (id)updateAccessToken:(id)arg1 andPassportId:(id)arg2;
+ (id)verifyVerificationCodeWithCode:(id)arg1 mobile:(id)arg2;
+ (id)userInformationRegisterWithPassportName:(id)arg1 Password:(id)arg2 Mobile:(id)arg3 inviteCode:(id)arg4 ImageURL:(id)arg5;
+ (id)userInformationRegisterWithPassword:(id)arg1 mobile:(id)arg2 code:(id)arg3;
+ (id)loginWithMobileNumber:(id)arg1 code:(id)arg2;
+ (id)loginWithName:(id)arg1 password:(id)arg2 code:(id)arg3;
+ (id)loginWithChinaMobileAccessToken:(id)arg1 userId:(id)arg2;
+ (id)loginWithWeiboAccessToken:(id)arg1 userId:(id)arg2;
+ (id)bindWeixinApp:(id)arg1;
+ (id)wxBindingStateApp;
+ (id)loginWithQQAccessToken:(id)arg1 openId:(id)arg2;
+ (id)loginWithThirdPartyCode:(id)arg1;
+ (id)userRegisterSendVerifyCodeWithPhoneNumber:(id)arg1;
+ (id)fetchVoiceVerifyCode:(id)arg1;
+ (id)loginWithThirdPartyService:(id)arg1 uid:(id)arg2 accessToken:(id)arg3;
+ (id)loginInvestAdviser:(id)arg1 andPassWord:(id)arg2;
+ (id)functionName:(id)arg1 paramDic:(id)arg2;
+ (id)appendUserSessionGetValue:(id)arg1 WthBorokerId:(id)arg2;
+ (id)submitTokenWithCode:(id)arg1 extPassword:(id)arg2;
+ (id)submitTokenWithCode:(id)arg1;
+ (id)bingZhongshanAccountByDic:(id)arg1 brokerId:(id)arg2;
+ (id)tradeQuery:(id)arg1;
+ (id)transferBackUrl:(id)arg1 andSignValue:(id)arg2;
+ (id)securityTransfer:(id)arg1;
+ (id)withdraw:(id)arg1;
+ (id)buySellBackUrl:(id)arg1 andSignValue:(id)arg2;
+ (id)unloginOpenAccountWithBrokerId:(id)arg1;
+ (id)fetchOpenAccountReqeust:(id)arg1 brokerId:(id)arg2;
+ (id)bingAccount:(id)arg1 andSignValue:(id)arg2 brokerId:(id)arg3;
+ (id)fetchTradeWebURLfetchTradeWebURLWthBorokerId:(id)arg1;
+ (id)warningPushOpen:(_Bool)arg1;
+ (id)messagePushOpen:(_Bool)arg1;
+ (id)deviceInit;
+ (id)pushMessaeRequest:(_Bool)arg1 pageSize:(long long)arg2 pageNum:(long long)arg3;
+ (id)apnsUrlWithFunction:(id)arg1;
+ (id)smsPushOpenwithBizDept:(id)arg1 withOpen:(_Bool)arg2;
+ (id)getSmsPushList;
+ (id)updateSubscribeSwitchWithDeviceToken:(id)arg1 withMsgType:(int)arg2 withSwitch:(int)arg3;
+ (id)requestPushFunListWithDeviceToken:(id)arg1 withMsgType:(long long)arg2;
+ (id)requestOpenAppPushWithDeviceToken:(id)arg1;
+ (id)requestLogoutPushWithDeviceToken:(id)arg1 userId:(id)arg2;
+ (id)requestLoginPushWithDeviceToken:(id)arg1 userId:(id)arg2;
+ (id)getCurrentuserType;
@property(nonatomic) long long accessTokenFaileCount; // @synthesize accessTokenFaileCount=_accessTokenFaileCount;
@property(retain, nonatomic) HTURLRequest *lastHTRequest; // @synthesize lastHTRequest=_lastHTRequest;
@property(copy, nonatomic) ASIHTTPRequest *lastRequest; // @synthesize lastRequest=_lastRequest;
@property(retain, nonatomic) HTURLRequest *keepSelf; // @synthesize keepSelf=_keepSelf;
@property(copy, nonatomic) NSString *requestMethod; // @synthesize requestMethod=_requestMethod;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) int contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(copy, nonatomic) NSString *downloadDestinationPath; // @synthesize downloadDestinationPath=_downloadDestinationPath;
@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) _Bool logEnabled; // @synthesize logEnabled=_logEnabled;
@property(copy, nonatomic) CDUnknownBlockType multiBlock; // @synthesize multiBlock=_multiBlock;
@property(copy, nonatomic) CDUnknownBlockType faileBlock; // @synthesize faileBlock=_faileBlock;
@property(copy, nonatomic) CDUnknownBlockType finishBlock; // @synthesize finishBlock=_finishBlock;
@property(copy, nonatomic) CDUnknownBlockType beforeSendBlock; // @synthesize beforeSendBlock=_beforeSendBlock;
@property(nonatomic) _Bool shouldCompressRequestBody; // @synthesize shouldCompressRequestBody=_shouldCompressRequestBody;
@property(nonatomic) _Bool validateSecureCertificate; // @synthesize validateSecureCertificate=_validateSecureCertificate;
@property(retain, nonatomic) id rawResponseObject; // @synthesize rawResponseObject=_rawResponseObject;
@property(readonly, copy, nonatomic) NSString *retMsg; // @synthesize retMsg=_retMsg;
@property(readonly, nonatomic) long long retCode; // @synthesize retCode=_retCode;
@property(retain, nonatomic) ASIHTTPRequest *request; // @synthesize request=_request;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
- (void).cxx_destruct;
- (void)mustLetVarGo;
- (void)dealloc;
- (void)markTradeLog:(id)arg1;
- (void)exchangeAccessToken:(id)arg1;
- (void)appendPostData:(id)arg1;
- (void)addRequestHeader:(id)arg1 value:(id)arg2;
- (void)addData:(id)arg1 withFileName:(id)arg2 andContentType:(id)arg3 forKey:(id)arg4;
- (void)addPostValue:(id)arg1;
- (void)addPostValue:(id)arg1 forKey:(id)arg2;
- (void)exchangeAccessToken;
- (void)markRequestFinished:(id)arg1;
- (void)requestFailed:(id)arg1;
- (void)requestFinished:(id)arg1;
- (void)request:(id)arg1 didReceiveResponseHeaders:(id)arg2;
- (void)request:(id)arg1 didReceiveData:(id)arg2;
- (_Bool)isHtmlResponse;
- (void)cancel;
@property(readonly, nonatomic) NSData *responseData;
- (id)handleResponseObjetTest:(_Bool)arg1;
- (void)parseTradeResponse:(id)arg1;
- (void)parseResponseObject:(id)arg1;
@property(readonly, nonatomic) id responseObject;
@property(readonly, nonatomic) NSString *responseString;
- (void)setFinishBlock:(CDUnknownBlockType)arg1 faileBlock:(CDUnknownBlockType)arg2 multiPartBlock:(CDUnknownBlockType)arg3;
- (void)setFinishBlock:(CDUnknownBlockType)arg1 faileBlock:(CDUnknownBlockType)arg2;
- (void)addSystemVersionToHeader;
- (void)handleReuqestBeforeSend;
- (id)formDataRequest;
- (void)configuireRequestHeader;
- (void)requestWillStarted;
- (void)setupContentType;
- (void)sendRequestInQueue:(_Bool)arg1;
- (_Bool)hasHttpBody;
- (_Bool)tradeUseOldNetWork:(id)arg1;
- (void)sendRequestInQueue;
- (void)sendRequest;
- (id)initWithURL:(id)arg1;
- (void)setValidatesSecureCertificate:(_Bool)arg1;
- (id)getRequest;
- (void)appendPostValue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

