//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "CAAnimationDelegate-Protocol.h"
#import "HHAudioRecorderDelegate-Protocol.h"

@class AVCaptureAudioDataOutput, AVCaptureConnection, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureSession, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, HHAudioRecorder, HHRecordEncoder, IOBSUploadManager, NSString;
@protocol HHRecordEngineDelegate, OS_dispatch_queue;

@interface HHRecordEngine : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, CAAnimationDelegate, HHAudioRecorderDelegate>
{
    CDStruct_1b6d18a9 _timeOffset;
    CDStruct_1b6d18a9 _lastVideo;
    CDStruct_1b6d18a9 _lastAudio;
    int _channels;
    double _samplerate;
    int _audioSamplerate;
    _Bool _isCapturing;
    _Bool _isPaused;
    _Bool _discont;
    HHRecordEncoder *_recordEncoder;
    AVCaptureSession *_captureSession;
    AVCaptureVideoPreviewLayer *_previewLayer;
    AVCaptureDeviceInput *_backCameraInput;
    AVCaptureDeviceInput *_frontCameraInput;
    AVCaptureDeviceInput *_audioMicInput;
    NSObject<OS_dispatch_queue> *_captureQueue;
    AVCaptureConnection *_audioConnection;
    AVCaptureConnection *_videoConnection;
    AVCaptureVideoDataOutput *_videoOutput;
    AVCaptureAudioDataOutput *_audioOutput;
    double _currentRecordTime;
    HHAudioRecorder *_audioRecorder;
    AVCaptureDevice *_device;
    double _maxRecordTime;
    long long _cx;
    long long _cy;
    NSString *_videoPath;
    NSString *_folderPath;
    id <HHRecordEngineDelegate> _delegate;
    NSString *_audioPath;
    IOBSUploadManager *_uploadVideoMgr;
    NSString *_uploadResultId;
    NSString *_fileName;
    CDUnknownBlockType _uploadHandler;
    NSString *_getUploadResultIdURL;
    NSString *_tokenKey;
    NSString *_systemId;
    CDStruct_1b6d18a9 _startTime;
}

+ (id)shareEngine;
@property(copy, nonatomic) NSString *systemId; // @synthesize systemId=_systemId;
@property(copy, nonatomic) NSString *tokenKey; // @synthesize tokenKey=_tokenKey;
@property(copy, nonatomic) NSString *getUploadResultIdURL; // @synthesize getUploadResultIdURL=_getUploadResultIdURL;
@property(copy, nonatomic) CDUnknownBlockType uploadHandler; // @synthesize uploadHandler=_uploadHandler;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSString *uploadResultId; // @synthesize uploadResultId=_uploadResultId;
@property(retain, nonatomic) IOBSUploadManager *uploadVideoMgr; // @synthesize uploadVideoMgr=_uploadVideoMgr;
@property(retain) NSString *audioPath; // @synthesize audioPath=_audioPath;
@property(nonatomic) __weak id <HHRecordEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSString *folderPath; // @synthesize folderPath=_folderPath;
@property(retain) NSString *videoPath; // @synthesize videoPath=_videoPath;
@property(nonatomic) long long cy; // @synthesize cy=_cy;
@property(nonatomic) long long cx; // @synthesize cx=_cx;
@property double maxRecordTime; // @synthesize maxRecordTime=_maxRecordTime;
@property(retain, nonatomic) AVCaptureDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) HHAudioRecorder *audioRecorder; // @synthesize audioRecorder=_audioRecorder;
@property double currentRecordTime; // @synthesize currentRecordTime=_currentRecordTime;
@property CDStruct_1b6d18a9 startTime; // @synthesize startTime=_startTime;
@property _Bool discont; // @synthesize discont=_discont;
@property _Bool isPaused; // @synthesize isPaused=_isPaused;
@property _Bool isCapturing; // @synthesize isCapturing=_isCapturing;
@property(retain, nonatomic) AVCaptureAudioDataOutput *audioOutput; // @synthesize audioOutput=_audioOutput;
@property(retain, nonatomic) AVCaptureVideoDataOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) AVCaptureConnection *videoConnection; // @synthesize videoConnection=_videoConnection;
@property(retain, nonatomic) AVCaptureConnection *audioConnection; // @synthesize audioConnection=_audioConnection;
@property(copy, nonatomic) NSObject<OS_dispatch_queue> *captureQueue; // @synthesize captureQueue=_captureQueue;
@property(retain, nonatomic) AVCaptureDeviceInput *audioMicInput; // @synthesize audioMicInput=_audioMicInput;
@property(retain, nonatomic) AVCaptureDeviceInput *frontCameraInput; // @synthesize frontCameraInput=_frontCameraInput;
@property(retain, nonatomic) AVCaptureDeviceInput *backCameraInput; // @synthesize backCameraInput=_backCameraInput;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(retain, nonatomic) HHRecordEncoder *recordEncoder; // @synthesize recordEncoder=_recordEncoder;
- (void).cxx_destruct;
- (void)dealloc;
- (void)__stopRecord;
- (void)__startRecord;
- (void)__shutDowm;
- (void)__stopCaptureWithHandler:(CDUnknownBlockType)arg1 block:(CDUnknownBlockType)arg2 blockForPaPhone:(CDUnknownBlockType)arg3;
- (void)__resumeCapture;
- (void)__pauseCapture;
- (void)__startCapture;
- (void)__startUp;
- (void)movieToImageHandler:(CDUnknownBlockType)arg1;
- (struct opaqueCMSampleBuffer *)adjustTime:(struct opaqueCMSampleBuffer *)arg1 by:(CDStruct_1b6d18a9)arg2;
- (void)setupAudioFormat:(struct opaqueCMFormatDescription *)arg1;
- (void)pushStatus2ServerWithType:(id)arg1 result:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)retryPushStatus2ServerWithType:(id)arg1 result:(id)arg2;
- (void)animationDidStart:(id)arg1;
- (void)changeCameraAnimation;
- (id)cameraWithPosition:(long long)arg1;
- (id)backCamera;
- (id)frontCamera;
- (id)initSingleton;
- (void)audioRecorderOutputAudioData:(id)arg1;
- (void)setFrameRateDevice:(id)arg1 fps:(int)arg2;
- (void)setFrameRateDevice:(id)arg1 durationInternal:(CDStruct_1b6d18a9)arg2;
- (void)upload2ServerWithURL:(id)arg1 tokenKey:(id)arg2 systemId:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)stopRecordWithHandler:(CDUnknownBlockType)arg1;
- (void)startRecord;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (id)sampleBufferRefTo8KData:(struct opaqueCMSampleBuffer *)arg1;
- (struct opaqueCMSampleBuffer *)createAudioSample:(void *)arg1 frames:(unsigned int)arg2;
- (struct AudioStreamBasicDescription)getAudioFormat;
- (void)paPhoneShutDownCamera;
- (void)paPhoneStopCaptureWithHandler:(CDUnknownBlockType)arg1 block:(CDUnknownBlockType)arg2;
- (void)paPhoneResumeCapture;
- (void)paPhonePauseCapture;
- (void)paPhoneStartCapture:(id)arg1 captureTime:(long long)arg2;
- (void)audioRouteChangeListenerCallback:(id)arg1;
- (void)paPhoneStartUpCamera;
- (void)shutDown;
- (void)shutdown;
- (void)stopCaptureWithHandler:(CDUnknownBlockType)arg1 block:(CDUnknownBlockType)arg2;
- (void)resumeCapture;
- (void)pauseCapture;
- (void)startCapture;
- (void)startUpWithMaxRecordTime:(long long)arg1 result:(CDUnknownBlockType)arg2;
- (void)startUpResult:(CDUnknownBlockType)arg1;
- (void)getUploadResultIdWithUUID:(id)arg1 url:(id)arg2 tokenKey:(id)arg3 systemId:(id)arg4 result:(CDUnknownBlockType)arg5;
- (id)imageFromSampleBuffer2:(struct opaqueCMSampleBuffer *)arg1;
- (id)imageFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (_Bool)cameraRunning;
- (void)turnSilenceOn:(_Bool)arg1;
- (void)changeCameraInputDeviceisFront:(_Bool)arg1;
- (void)closeFlashLight;
- (void)openFlashLight;
- (id)getVideFolder;
- (int)setVideoFolder:(id)arg1;
- (void)setAudioSamplerate:(int)arg1;
- (void)setVideoSize:(unsigned long long)arg1;
- (void)setCx:(long long)arg1 Cy:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

